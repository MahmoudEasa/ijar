swagger: "2.0"
info:
  title: Cart API
  version: "1.0.0"
  description: Cart management for an e-commerce application
tags:
  - name: Cart
    description: Cart management
paths:
  /api/cart:
    post:
      summary: Add to Cart
      description: Add Car to Cart
      tags: [Cart]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - carId
                - userId
                - endDate
                - totalCost
              properties:
                carId:
                  type: string
                  default: 60f3a0b2d3e4d4b5d4e9e4b5
                userId:
                  type: string
                  default: 60f3a0b2d3e4d4b5d4e9e4b5
                startDate:
                  type: date
                  default: 2021-07-01
                endDate:
                  type: date
                  default: 2021-08-01
                rentalTerm:
                  type: number
                  default: 1
                totalCost:
                  type: number
                  default: 100
      responses:
        200:
          description: Car added to cart successfully
        401:
          description: Unauthorized access
        404:
          description: Car not available
    get:
      summary: View Cart
      description: View Cart
      tags: [Cart]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Return All Cars
        401:
          description: Unauthorized access
  /api/cart/{id}:
    delete:
      summary: Delete car from cart
      description: Delete car from cart
      tags: [Cart]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the car to delete
      responses:
        204:
          description: Car deleted from cart successfully
        401:
          description: Unauthorized access
  /api/checkout:
    post:
      summary: Checkout
      description: Checkout
      tags: [Cart]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Checked out successfully
        401:
          description: Unauthorized access
  /api/cart/cancel:
    put:
      summary: "Cancel Booking"
      description: "Cancel a booking in the cart"
      tags: [Cart]
      security:
        - bearerAuth: []
      parameters:
        - name: "Authorization"
          in: "header"
          description: "Bearer Token"
          required: true
          type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  description: ID of the cart to cancel
      responses:
        200:
          description: "Booking cancelled successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Booking cancelled successfully"
        401:
          description: "Not found"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Not found"
        500:
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "Internal Server Error"
  securityDefinitions:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
